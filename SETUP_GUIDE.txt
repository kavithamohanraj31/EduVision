================================================================================
                    EDUADVISORX - SETUP & RUNNING GUIDE
================================================================================

PROJECT: AI-Powered Educational Guidance Platform
TECH STACK: React + Node.js + Firebase + AI Integration

================================================================================
1. PREREQUISITES
================================================================================

REQUIRED SOFTWARE:
- Node.js (v18 or higher)
- npm (v8 or higher)
- Git
- Firebase account
- Google Cloud account (for Gemini AI)

SYSTEM REQUIREMENTS:
- RAM: 8GB minimum, 16GB recommended
- Storage: 2GB free space
- Internet connection for Firebase and AI services

================================================================================
2. FIREBASE SETUP
================================================================================

STEP 1: Create Firebase Project
1. Go to https://console.firebase.google.com/
2. Click "Create a project"
3. Enter project name: "edutechadvisor-c5cc7"
4. Enable Google Analytics (optional)
5. Click "Create project"

STEP 2: Enable Firestore Database
1. In Firebase Console, go to "Firestore Database"
2. Click "Create database"
3. Choose "Start in test mode"
4. Select a location (choose closest to your region)
5. Click "Done"

STEP 3: Get Project Configuration
1. Go to Project Settings (gear icon)
2. Scroll down to "Your apps"
3. Click "Web app" icon
4. Register app with nickname: "EduAdvisorX"
5. Copy the Firebase configuration object

================================================================================
3. GEMINI AI SETUP
================================================================================

STEP 1: Enable Gemini API
1. Go to https://console.cloud.google.com/
2. Select your Firebase project
3. Go to "APIs & Services" > "Library"
4. Search for "Generative Language API"
5. Click "Enable"

STEP 2: Create API Key
1. Go to "APIs & Services" > "Credentials"
2. Click "Create Credentials" > "API Key"
3. Copy the API key
4. (Optional) Restrict the API key for security

================================================================================
4. PROJECT SETUP
================================================================================

STEP 1: Clone Repository
```bash
git clone [your-repository-url]
cd EduAdvisorX
```

STEP 2: Install Dependencies
```bash
# Install all dependencies
npm install

# Install Firebase CLI (optional)
npm install -g firebase-tools
```

STEP 3: Environment Configuration
1. Copy env.example to .env
```bash
cp env.example .env
```

2. Update .env file with your configuration:
```
NODE_ENV=development
PORT=5000
SESSION_SECRET=your-secret-key-here

# Firebase Configuration
FIREBASE_PROJECT_ID=edutechadvisor-c5cc7
FIREBASE_API_KEY=your-firebase-api-key
FIREBASE_AUTH_DOMAIN=edutechadvisor-c5cc7.firebaseapp.com
FIREBASE_STORAGE_BUCKET=edutechadvisor-c5cc7.firebasestorage.app
FIREBASE_MESSAGING_SENDER_ID=your-sender-id
FIREBASE_APP_ID=your-app-id
FIREBASE_MEASUREMENT_ID=your-measurement-id

# AI Service
OPENAI_API_KEY=your-gemini-api-key
```

================================================================================
5. DATABASE SEEDING
================================================================================

STEP 1: Seed Assessment Questions
```bash
npm run seed:questions
```

STEP 2: Seed CSV Data (Colleges, Courses, Scholarships)
```bash
npm run seed:csv
```

STEP 3: Seed All Data
```bash
npm run seed:firebase
```

================================================================================
6. RUNNING THE APPLICATION
================================================================================

STEP 1: Start Development Server
```bash
npm run dev
```

This will start:
- Backend server on http://localhost:5000
- Frontend development server on http://localhost:5173

STEP 2: Access the Application
1. Open browser and go to http://localhost:5173
2. The application should load with the landing page
3. Click "Start Assessment" to begin the quiz

================================================================================
7. TESTING THE APPLICATION
================================================================================

TESTING LOGIN:
1. Go to http://localhost:5000/api/login
2. You should see a JSON response with login success
3. This creates a demo user for testing

TESTING ASSESSMENT:
1. Go to http://localhost:5173/assessment
2. Complete the 10-question assessment
3. Submit to see AI-powered recommendations

TESTING API ENDPOINTS:
```bash
# Test assessment questions
curl http://localhost:5000/api/assessment/questions

# Test login
curl http://localhost:5000/api/login

# Test user info (after login)
curl http://localhost:5000/api/auth/user
```

================================================================================
8. TROUBLESHOOTING
================================================================================

COMMON ISSUES:

1. Firebase Connection Error:
   - Check Firebase project ID in .env
   - Verify Firestore is enabled
   - Check internet connection

2. AI Service Error:
   - Verify Gemini API key is correct
   - Check API quota limits
   - Ensure API is enabled in Google Cloud

3. Database Seeding Issues:
   - Check CSV files exist in client/public/
   - Verify Firebase permissions
   - Check console for error messages

4. Port Already in Use:
   - Change PORT in .env file
   - Kill existing processes: taskkill /F /IM node.exe

5. Module Not Found Errors:
   - Run npm install again
   - Clear node_modules and reinstall
   - Check Node.js version compatibility

================================================================================
9. PRODUCTION DEPLOYMENT
================================================================================

FIREBASE HOSTING (Frontend):
```bash
# Build the project
npm run build

# Deploy to Firebase
firebase login
firebase init hosting
firebase deploy
```

BACKEND DEPLOYMENT:
1. Deploy to cloud platform (Heroku, Vercel, etc.)
2. Set environment variables
3. Configure CORS for production domain
4. Set up monitoring and logging

================================================================================
10. DEVELOPMENT WORKFLOW
================================================================================

DAILY DEVELOPMENT:
1. Start development server: npm run dev
2. Make changes to code
3. Test in browser
4. Check console for errors
5. Commit changes to git

ADDING NEW FEATURES:
1. Create feature branch
2. Implement changes
3. Test thoroughly
4. Update documentation
5. Create pull request

DATABASE CHANGES:
1. Update Firebase collections
2. Modify seeding scripts
3. Test data migration
4. Update API endpoints
5. Test frontend integration

================================================================================
11. PROJECT STRUCTURE
================================================================================

EduAdvisorX/
├── client/                 # Frontend React application
│   ├── src/
│   │   ├── components/     # React components
│   │   ├── pages/         # Page components
│   │   ├── hooks/         # Custom React hooks
│   │   └── lib/           # Utility functions
│   └── public/            # Static files and CSV data
├── server/                # Backend Node.js application
│   ├── services/          # AI and external services
│   ├── seed-*.ts          # Database seeding scripts
│   └── *.ts               # Server files
├── shared/                # Shared TypeScript definitions
└── docs/                  # Documentation files

================================================================================
12. SUPPORT & CONTACT
================================================================================

For technical support or questions:
- Check this setup guide first
- Review error messages in console
- Check Firebase and Google Cloud console
- Contact development team

IMPORTANT NOTES:
- Keep API keys secure and never commit to git
- Test thoroughly before production deployment
- Monitor Firebase usage and costs
- Keep dependencies updated for security

================================================================================
END OF SETUP GUIDE
================================================================================
